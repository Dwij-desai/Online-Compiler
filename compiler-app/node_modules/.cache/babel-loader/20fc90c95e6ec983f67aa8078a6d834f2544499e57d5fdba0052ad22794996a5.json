{"ast":null,"code":"var _jsxFileName = \"/Users/dwijdesai/Documents/FET/Collage project/compiler-app/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Editor from \"@monaco-editor/react\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [code, setCode] = useState(\"\");\n  const [language, setLanguage] = useState(\"\");\n  useEffect(() => {\n    console.log(code); // Logs the value of the 'code' variable, likely representing the editor's content from the 'e' event\n  }, [code]);\n  const SubmitCode = () => {\n    // we will revisit this code and add api logic to submit the code\n    cons;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        background: language == \"Python\" ? \"Black\" : \"White\",\n        color: language == \"Python\" ? \"White\" : \"Black\"\n      } // This for color change on click\n      ,\n      onClick: () => {\n        setLanguage(\"Python\");\n      } // This is for setting the language to Python\n      ,\n      children: \"Python\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        background: language == \"JavaScript\" ? \"Black\" : \"White\",\n        color: language == \"JavaScript\" ? \"White\" : \"Black\"\n      } // This for color change on click\n      ,\n      onClick: () => {\n        setLanguage(\"JavaScript\");\n      } // This is for setting the language to JavaScript\n      ,\n      children: \"JavaScript\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        background: language == \"Java\" ? \"Black\" : \"White\",\n        color: language == \"Java\" ? \"White\" : \"Black\"\n      } // This for color change on click\n      ,\n      onClick: () => {\n        setLanguage(\"Java\");\n      } // This is for setting the language to Java\n      ,\n      children: \"Java\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Submit Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      onChange: e => {\n        setCode(e); // this is the value of the editor\n      },\n      value: code // this is the value of the editor\n      ,\n      theme: \"vs-dark\" // this is added by me:- \"to set the theme to dark\"\n      ,\n      height: \"90vh\",\n      defaultLanguage: \"python\" // this is the default language\n      ,\n      defaultValue: \"// some comment\" // this is default text on opening the editor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jVLuBCVuIIj43NIuzxotvYph6Wg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Editor","useEffect","useState","jsxDEV","_jsxDEV","App","_s","code","setCode","language","setLanguage","console","log","SubmitCode","cons","className","children","style","background","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","value","theme","height","defaultLanguage","defaultValue","_c","$RefreshReg$"],"sources":["/Users/dwijdesai/Documents/FET/Collage project/compiler-app/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Editor from \"@monaco-editor/react\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [code, setCode] = useState(\"\");\n  const [language, setLanguage] = useState(\"\");\n\n  useEffect(() => {\n    console.log(code); // Logs the value of the 'code' variable, likely representing the editor's content from the 'e' event\n  }, [code]);\n\n  const SubmitCode = () => {\n    // we will revisit this code and add api logic to submit the code\n    cons\n  };\n\n  return (\n    <div className=\"App\">\n      <button\n        style={{\n          background: language == \"Python\" ? \"Black\" : \"White\",\n          color: language == \"Python\" ? \"White\" : \"Black\",\n        }} // This for color change on click\n        onClick={() => {\n          setLanguage(\"Python\");\n        }} // This is for setting the language to Python\n      >\n        Python\n      </button>\n\n      <button\n        style={{\n          background: language == \"JavaScript\" ? \"Black\" : \"White\",\n          color: language == \"JavaScript\" ? \"White\" : \"Black\",\n        }} // This for color change on click\n        onClick={() => {\n          setLanguage(\"JavaScript\");\n        }} // This is for setting the language to JavaScript\n      >\n        JavaScript\n      </button>\n\n      <button\n        style={{\n          background: language == \"Java\" ? \"Black\" : \"White\",\n          color: language == \"Java\" ? \"White\" : \"Black\",\n        }} // This for color change on click\n        onClick={() => {\n          setLanguage(\"Java\");\n        }} // This is for setting the language to Java\n      >\n        Java\n      </button>\n\n      <button>Submit Code</button>\n\n      <Editor\n        onChange={(e) => {\n          setCode(e); // this is the value of the editor\n        }}\n        value={code} // this is the value of the editor\n        theme=\"vs-dark\" // this is added by me:- \"to set the theme to dark\"\n        height=\"90vh\"\n        defaultLanguage=\"python\" // this is the default language\n        defaultValue=\"// some comment\" // this is default text on opening the editor\n      />\n      {/* This Editor:Tag works as a compitent */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}