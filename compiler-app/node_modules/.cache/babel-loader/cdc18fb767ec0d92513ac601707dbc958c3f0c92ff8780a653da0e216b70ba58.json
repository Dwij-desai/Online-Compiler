{"ast":null,"code":"var _jsxFileName = \"/Users/dwijdesai/Documents/FET/Collage project/compiler-app/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Editor from \"@monaco-editor/react\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [code, setCode] = useState(\"\");\n  const [language, setLanguage] = useState(\"\");\n  useEffect(() => {\n    console.log(code); // Logs the value of the 'code' variable, likely representing the editor's content from the 'e' event\n  }, [code]);\n\n  // const SubmitCode = () => {\n  //   // we will revisit this code and add api logic to submit the code\n  //   console.log(code);\n  // };\n  ////////////////////////////////////////////////////////////////////////////\n  const SubmitCode = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/execute\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          code: code,\n          language: language.toLowerCase() // \"python\", \"javascript\", \"java\"\n        })\n      });\n      const data = await response.json();\n      setOutput(data.body); // assuming 'body' contains the output\n    } catch (err) {\n      setOutput(\"Error: \" + err.message);\n    }\n  };\n  ////////////////////////////////////////////////////////////////////////////\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        background: language == \"Python\" ? \"Black\" : \"White\",\n        color: language == \"Python\" ? \"White\" : \"Black\"\n      } // This for color change on click\n      ,\n      onClick: () => {\n        setLanguage(\"Python\");\n      } // This is for setting the language to Python\n      ,\n      children: \"Python\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        background: language == \"JavaScript\" ? \"Black\" : \"White\",\n        color: language == \"JavaScript\" ? \"White\" : \"Black\"\n      } // This for color change on click\n      ,\n      onClick: () => {\n        setLanguage(\"JavaScript\");\n      } // This is for setting the language to JavaScript\n      ,\n      children: \"JavaScript\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        background: language == \"Java\" ? \"Black\" : \"White\",\n        color: language == \"Java\" ? \"White\" : \"Black\"\n      } // This for color change on click\n      ,\n      onClick: () => {\n        setLanguage(\"Java\");\n      } // This is for setting the language to Java\n      ,\n      children: \"Java\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        background: language == \"Java\" ? \"Black\" : \"White\"\n      } // This for color change on click\n      ,\n      onClick: () => {\n        SubmitCode();\n      },\n      children: \"Submit Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      onChange: e => {\n        setCode(e); // this is the value of the editor\n      },\n      value: code // this is the value of the editor\n      ,\n      theme: \"vs-dark\" // this is added by me:- \"to set the theme to dark\"\n      ,\n      height: \"90vh\",\n      defaultLanguage: \"python\" // this is the default language\n      ,\n      defaultValue: \"# some comment\" // this is default text on opening the editor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jVLuBCVuIIj43NIuzxotvYph6Wg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Editor","useEffect","useState","jsxDEV","_jsxDEV","App","_s","code","setCode","language","setLanguage","console","log","SubmitCode","response","fetch","method","headers","body","JSON","stringify","toLowerCase","data","json","setOutput","err","message","className","children","style","background","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","value","theme","height","defaultLanguage","defaultValue","_c","$RefreshReg$"],"sources":["/Users/dwijdesai/Documents/FET/Collage project/compiler-app/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Editor from \"@monaco-editor/react\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [code, setCode] = useState(\"\");\n  const [language, setLanguage] = useState(\"\");\n\n  useEffect(() => {\n    console.log(code); // Logs the value of the 'code' variable, likely representing the editor's content from the 'e' event\n  }, [code]);\n\n  // const SubmitCode = () => {\n  //   // we will revisit this code and add api logic to submit the code\n  //   console.log(code);\n  // };\n  ////////////////////////////////////////////////////////////////////////////\n  const SubmitCode = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/execute\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          code: code,\n          language: language.toLowerCase(), // \"python\", \"javascript\", \"java\"\n        }),\n      });\n\n      const data = await response.json();\n      setOutput(data.body); // assuming 'body' contains the output\n    } catch (err) {\n      setOutput(\"Error: \" + err.message);\n    }\n  };\n  ////////////////////////////////////////////////////////////////////////////\n  return (\n    <div className=\"App\">\n      <button\n        style={{\n          background: language == \"Python\" ? \"Black\" : \"White\",\n          color: language == \"Python\" ? \"White\" : \"Black\",\n        }} // This for color change on click\n        onClick={() => {\n          setLanguage(\"Python\");\n        }} // This is for setting the language to Python\n      >\n        Python\n      </button>\n\n      <button\n        style={{\n          background: language == \"JavaScript\" ? \"Black\" : \"White\",\n          color: language == \"JavaScript\" ? \"White\" : \"Black\",\n        }} // This for color change on click\n        onClick={() => {\n          setLanguage(\"JavaScript\");\n        }} // This is for setting the language to JavaScript\n      >\n        JavaScript\n      </button>\n\n      <button\n        style={{\n          background: language == \"Java\" ? \"Black\" : \"White\",\n          color: language == \"Java\" ? \"White\" : \"Black\",\n        }} // This for color change on click\n        onClick={() => {\n          setLanguage(\"Java\");\n        }} // This is for setting the language to Java\n      >\n        Java\n      </button>\n\n      <button\n        style={{\n          background: language == \"Java\" ? \"Black\" : \"White\",\n        }} // This for color change on click\n        onClick={() => {\n          SubmitCode();\n        }}\n      >\n        Submit Code\n      </button>\n\n      <Editor\n        onChange={(e) => {\n          setCode(e); // this is the value of the editor\n        }}\n        value={code} // this is the value of the editor\n        theme=\"vs-dark\" // this is added by me:- \"to set the theme to dark\"\n        height=\"90vh\"\n        defaultLanguage=\"python\" // this is the default language\n        defaultValue=\"# some comment\" // this is default text on opening the editor\n      />\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}