{"ast":null,"code":"var _jsxFileName = \"/Users/dwijdesai/Documents/FET/Collage project/compiler-app/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Editor from \"@monaco-editor/react\";\nimport { useEffect, useState } from \"react\";\n\n/**\n * The `App` component is the main entry point of the application. It provides a simple interface\n * for selecting a programming language and editing code in a text editor. The component includes:\n * \n * - Three buttons for selecting a programming language (Python, JavaScript, Java).\n *   The selected language is highlighted with a color change.\n * - An editor component where users can write and edit code. The editor's content is stored in state.\n * \n * State:\n * - `code` (string): Stores the current code written in the editor.\n * - `language` (string): Stores the currently selected programming language.\n * \n * Effects:\n * - Logs the current value of the `code` state to the console whenever it changes.\n * \n * Features:\n * - Dynamically updates the button styles based on the selected language.\n * - Uses a dark theme for the editor.\n * \n * @component\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [code, setCode] = useState(\"\");\n  const [language, setLanguage] = useState(\"\");\n  useEffect(() => {\n    console.log(code); // This is the value of the editor printing in console taken from 'e'\n  }, [code]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        background: language == \"Python\" ? \"Black\" : \"White\",\n        color: language == \"Python\" ? \"White\" : \"Black\"\n      } // This for color change on click\n      ,\n      onClick: () => {\n        setLanguage(\"Python\");\n      } // This is for setting the language to Python\n      ,\n      children: \"Python\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        background: language == \"JavaScript\" ? \"Black\" : \"White\",\n        color: language == \"JavaScript\" ? \"White\" : \"Black\"\n      } // This for color change on click\n      ,\n      onClick: () => {\n        setLanguage(\"JavaScript\");\n      } // This is for setting the language to JavaScript\n      ,\n      children: \"JavaScript\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        background: language == \"Java\" ? \"Black\" : \"White\",\n        color: language == \"Java\" ? \"White\" : \"Black\"\n      } // This for color change on click\n      ,\n      onClick: () => {\n        setLanguage(\"Java\");\n      } // This is for setting the language to Java\n      ,\n      children: \"Java\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      onChange: e => {\n        setCode(e); // this is the value of the editor\n      },\n      value: code // this is the value of the editor\n      ,\n      theme: \"vs-dark\" // this is added by me:- \"to set the theme to dark\"\n      ,\n      height: \"90vh\",\n      defaultLanguage: \"javascript\",\n      defaultValue: \"// some comment\" // this is default text on opening the editor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jVLuBCVuIIj43NIuzxotvYph6Wg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Editor","useEffect","useState","jsxDEV","_jsxDEV","App","_s","code","setCode","language","setLanguage","console","log","className","children","style","background","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","value","theme","height","defaultLanguage","defaultValue","_c","$RefreshReg$"],"sources":["/Users/dwijdesai/Documents/FET/Collage project/compiler-app/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Editor from \"@monaco-editor/react\";\nimport { useEffect, useState } from \"react\";\n\n/**\n * The `App` component is the main entry point of the application. It provides a simple interface\n * for selecting a programming language and editing code in a text editor. The component includes:\n * \n * - Three buttons for selecting a programming language (Python, JavaScript, Java).\n *   The selected language is highlighted with a color change.\n * - An editor component where users can write and edit code. The editor's content is stored in state.\n * \n * State:\n * - `code` (string): Stores the current code written in the editor.\n * - `language` (string): Stores the currently selected programming language.\n * \n * Effects:\n * - Logs the current value of the `code` state to the console whenever it changes.\n * \n * Features:\n * - Dynamically updates the button styles based on the selected language.\n * - Uses a dark theme for the editor.\n * \n * @component\n */\nfunction App() {\n  const [code, setCode] = useState(\"\");\n  const [language, setLanguage] = useState(\"\");\n\n  useEffect(() => {\n    console.log(code); // This is the value of the editor printing in console taken from 'e'\n  }, [code]);\n\n  return (\n    <div className=\"App\">\n      <button\n        style={{\n          background: language == \"Python\" ? \"Black\" : \"White\",\n          color: language == \"Python\" ? \"White\" : \"Black\",\n        }} // This for color change on click\n        onClick={() => {\n          setLanguage(\"Python\");\n        }} // This is for setting the language to Python\n      >\n        Python\n      </button>\n\n      <button\n        style={{\n          background: language == \"JavaScript\" ? \"Black\" : \"White\",\n          color: language == \"JavaScript\" ? \"White\" : \"Black\",\n        }} // This for color change on click\n        onClick={() => {\n          setLanguage(\"JavaScript\");\n        }} // This is for setting the language to JavaScript\n      >\n        JavaScript\n      </button>\n\n      <button\n        style={{\n          background: language == \"Java\" ? \"Black\" : \"White\",\n          color: language == \"Java\" ? \"White\" : \"Black\",\n        }} // This for color change on click\n        onClick={() => {\n          setLanguage(\"Java\");\n        }} // This is for setting the language to Java\n      >\n        Java\n      </button>\n\n      <Editor\n        onChange={(e) => {\n          setCode(e); // this is the value of the editor\n        }}\n        value={code} // this is the value of the editor\n        theme=\"vs-dark\" // this is added by me:- \"to set the theme to dark\"\n        height=\"90vh\"\n        defaultLanguage=\"javascript\"\n        defaultValue=\"// some comment\" // this is default text on opening the editor\n      />\n      {/* This Editor:Tag works as a compitent */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA,SAAAC,MAAA,IAAAC,OAAA;AAqBA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACdU,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC,CAAC,CAAC;EACrB,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,oBACEH,OAAA;IAAKS,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBV,OAAA;MACEW,KAAK,EAAE;QACLC,UAAU,EAAEP,QAAQ,IAAI,QAAQ,GAAG,OAAO,GAAG,OAAO;QACpDQ,KAAK,EAAER,QAAQ,IAAI,QAAQ,GAAG,OAAO,GAAG;MAC1C,CAAE,CAAC;MAAA;MACHS,OAAO,EAAEA,CAAA,KAAM;QACbR,WAAW,CAAC,QAAQ,CAAC;MACvB,CAAE,CAAC;MAAA;MAAAI,QAAA,EACJ;IAED;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETlB,OAAA;MACEW,KAAK,EAAE;QACLC,UAAU,EAAEP,QAAQ,IAAI,YAAY,GAAG,OAAO,GAAG,OAAO;QACxDQ,KAAK,EAAER,QAAQ,IAAI,YAAY,GAAG,OAAO,GAAG;MAC9C,CAAE,CAAC;MAAA;MACHS,OAAO,EAAEA,CAAA,KAAM;QACbR,WAAW,CAAC,YAAY,CAAC;MAC3B,CAAE,CAAC;MAAA;MAAAI,QAAA,EACJ;IAED;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETlB,OAAA;MACEW,KAAK,EAAE;QACLC,UAAU,EAAEP,QAAQ,IAAI,MAAM,GAAG,OAAO,GAAG,OAAO;QAClDQ,KAAK,EAAER,QAAQ,IAAI,MAAM,GAAG,OAAO,GAAG;MACxC,CAAE,CAAC;MAAA;MACHS,OAAO,EAAEA,CAAA,KAAM;QACbR,WAAW,CAAC,MAAM,CAAC;MACrB,CAAE,CAAC;MAAA;MAAAI,QAAA,EACJ;IAED;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETlB,OAAA,CAACJ,MAAM;MACLuB,QAAQ,EAAGC,CAAC,IAAK;QACfhB,OAAO,CAACgB,CAAC,CAAC,CAAC,CAAC;MACd,CAAE;MACFC,KAAK,EAAElB,IAAK,CAAC;MAAA;MACbmB,KAAK,EAAC,SAAS,CAAC;MAAA;MAChBC,MAAM,EAAC,MAAM;MACbC,eAAe,EAAC,YAAY;MAC5BC,YAAY,EAAC,iBAAiB,CAAC;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEV;AAAChB,EAAA,CA3DQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA6DZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}